language: cpp

sudo: required

matrix:
  include:
#    - os: linux
#      dist: trusty
#      env: COMPILER=icc
    - os: linux
      dist: trusty
      env: COMPILER=clang
    - os: linux
      dist: trusty
      env: COMPILER=gcc
    - os: osx
      osx_image: xcode8.3

before_install:
  - if [ $TRAVIS_OS_NAME == osx ]; then export PATH=/usr/bin:$PATH; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu/ xenial main universe"; fi 
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo add-apt-repository "deb http://ppa.launchpad.net/marutter/rrutter/ubuntu xenial main"; fi 
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get update; fi
  - if [ $COMPILER == icc ]; then wget "https://raw.githubusercontent.com/nemequ/icc-travis/master/install-icc.sh"; fi
  - if [ $COMPILER == icc ]; then sudo sh install-icc.sh; fi
  - if [ $COMPILER == icc ]; then source ~/.bashrc; fi
  - if [ $COMPILER == icc ]; then export CMAKE_ARGS="-DCMAKE_CXX_COMPILER=icpc -DCMAKE_C_COMPILER=icc"; fi
  - if [ $COMPILER == clang ]; then export CMAKE_ARGS="-DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang"; fi
  - if [ $COMPILER == gcc ]; then export CMAKE_ARGS="-DCODE_COVERAGE=ON"; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then export CMAKE_PREFIX="-DCMAKE_INSTALL_PREFIX=/usr/local"; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then export CMAKE_PREFIX="-DCMAKE_INSTALL_PREFIX=/usr"; fi



install:
  ### LINUX
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get install --no-install-recommends -t xenial -y lcov libeigen3-dev libboost1.58-dev g++; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get install --no-install-recommends -t xenial -y doxygen doxygen-doc doxygen-gui graphviz; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get autoremove; fi # in particular remove old compilers so that new ones are the default


  ### OSX
  - if [ $TRAVIS_OS_NAME == osx ]; then /usr/bin/yes | pip2 uninstall numpy; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then rm /usr/local/include/c++; fi # https://github.com/Homebrew/brew/issues/1742#issuecomment-277308817
  - if [ $TRAVIS_OS_NAME == osx ]; then brew update; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then brew install gcc lcov eigen doxygen graphviz; fi

script:
  - mkdir release
  - mkdir debug
  - cd debug
  - cmake .. $CMAKE_ARGS -DOPT_ASAN=OFF -DCMAKE_BUILD_TYPE=Debug
  - if [ $COMPILER == gcc ]; then make wdm_coverage; else make; fi
  - if [ $COMPILER == gcc ]; then bash <(curl -s https://codecov.io/bash) -f /home/travis/build/tnagler/wdm/debug/coverage.info; fi
  - cd ../release
  - cmake .. $CMAKE_ARGS -DCMAKE_BUILD_TYPE=Release && make && sudo make install
  - bin/test_all
  - cd ../example
  - mkdir build
  - cd build
  - cmake .. $CMAKE_ARGS && VERBOSE=1 make
  - cd ../bin
  - ./main

after_script:
  - if [ $COMPILER == icc ]; then '[[ ! -z "${INTEL_INSTALL_PATH}" ]] && uninstall_intel_software'; fi
